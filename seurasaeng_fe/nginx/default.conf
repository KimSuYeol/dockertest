# Upstream 백엔드 서버 설정
upstream backend_servers {
    server 10.0.2.165:8080 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# HTTP 서버 (Let's Encrypt 검증 + HTTPS 리다이렉트)
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # 접근 로그 (디버깅용)
    access_log /var/log/nginx/http_access.log;
    error_log /var/log/nginx/http_error.log;

    # Let's Encrypt ACME Challenge (가장 중요!)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        access_log /var/log/nginx/acme_access.log;
        error_log /var/log/nginx/acme_error.log;
        
        # 파일 직접 서빙
        try_files $uri $uri/ =404;
        
        # 보안 헤더 제거 (ACME 검증용)
        add_header X-Acme-Challenge "active" always;
        
        # 캐시 비활성화
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # 헬스체크 (HTTP)
    location /health {
        access_log off;
        return 200 "healthy http\n";
        add_header Content-Type text/plain;
    }

    # 나머지 모든 요청은 HTTPS로 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS 서버
server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    http2 on;
    server_name _;

    # SSL 인증서 설정
    ssl_certificate /etc/ssl/certs/server.crt;
    ssl_certificate_key /etc/ssl/private/server.key;

    # SSL 최적화
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    # 보안 헤더
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    root /usr/share/nginx/html;
    index index.html index.htm;

    # 로그 설정
    access_log /var/log/nginx/https_access.log;
    error_log /var/log/nginx/https_error.log warn;

    # API 프록시 (백엔드 연결시)
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://backend_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # CORS 헤더
        add_header 'Access-Control-Allow-Origin' 'https://seurasaeng.site' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://seurasaeng.site' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_intercept_errors on;
    }

    # 헬스체크 (HTTPS)
    location /health {
        access_log off;
        return 200 "healthy https\n";
        add_header Content-Type text/plain;
    }

    # SSL 상태 확인 (내부용)
    location /ssl-status {
        access_log off;
        return 200 "SSL certificate active\n";
        add_header Content-Type text/plain;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        deny all;
    }

    # React Router 설정 (SPA)
    location / {
        try_files $uri $uri/ /index.html;
        
        # 정적 파일 캐싱
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            add_header 'Access-Control-Allow-Origin' '*' always;
        }
        
        # HTML 파일은 캐싱하지 않음
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # 보안 설정
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* \.(env|git|gitignore|dockerignore)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 에러 페이지
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}