name: Deploy Auto-HTTPS Frontend

on:
  push:
    branches: [main]
    paths: ['seurasaeng_fe/**']
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: seurasaeng_fe/package-lock.json
    
    - name: Install and Build
      run: |
        cd seurasaeng_fe
        npm ci
        echo "VITE_API_URL=https://seurasaeng.site/api" > .env.production
        npm run build
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker Image
      run: |
        cd seurasaeng_fe
        docker buildx build --platform linux/arm64 --build-arg VITE_API_URL=https://seurasaeng.site/api -t seuraseung-frontend:latest . --load
    
    - name: Save Docker Image
      run: |
        docker save seuraseung-frontend:latest | gzip > seurasaeng_fe-image.tar.gz
    
    - name: Copy Files to Server
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.FRONT_SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "seurasaeng_fe-image.tar.gz,seurasaeng_fe/deploy.sh,seurasaeng_fe/docker-compose.yml,seurasaeng_fe/nginx/,seurasaeng_fe/scripts/"
        target: "/tmp/deploy/"
        timeout: 300s
    
    - name: Deploy on Server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.FRONT_SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        timeout: 600s
        script: |
          set -e
          cd /tmp/deploy
          
          # Docker 이미지 로드
          if [ -f "seurasaeng_fe-image.tar.gz" ]; then
            docker load < seurasaeng_fe-image.tar.gz
            rm seurasaeng_fe-image.tar.gz
          fi
          
          # 배포 디렉토리로 이동
          cd seurasaeng_fe
          
          # 배포 실행
          chmod +x deploy.sh scripts/*.sh
          ./deploy.sh
          
          echo "✅ Deployment completed successfully"
    
    - name: Health Check
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.FRONT_SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          for i in {1..10}; do
            if curl -f -s https://seurasaeng.site/health >/dev/null 2>&1; then
              echo "✅ HTTPS Health check passed"
              break
            elif curl -f -s http://${{ secrets.FRONT_SERVER_HOST }}/health >/dev/null 2>&1; then
              echo "✅ HTTP Health check passed"
              break
            fi
            echo "Waiting for service... ($i/10)"
            sleep 10
          done