spring:
  application:
    name: seurasaeng-test
  
  # 테스트 프로파일 설정
  profiles:
    active: test
  
  # 데이터베이스 설정 (PostgreSQL - test 스키마)
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/seuraseung?currentSchema=seurasaeng-test
    username: seuraseung
    password: seuraseung123!
    hikari:
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 30000
      idle-timeout: 300000
      max-lifetime: 900000
  
  # JPA 설정 (테스트)
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: create-drop  # 테스트시 스키마 재생성
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
        default_schema: seurasaeng-test
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  # Redis 설정 (테스트 - DB 1)
  redis:
    host: localhost
    port: 6379
    password: redis123!
    database: 1  # 테스트용 DB 1 사용
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 4
        max-idle: 4
        min-idle: 0
        max-wait: 2000ms
  
  # 메일 설정 (테스트 - 모킹)
  mail:
    host: smtp.gmail.com
    port: 587
    username: test@example.com
    password: test-password
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false
  
  # Thymeleaf 설정 (테스트)
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false  # 테스트시 캐시 비활성화
    mode: HTML
    encoding: UTF-8
  
  # 웹 설정 (테스트)
  web:
    resources:
      cache:
        period: 0  # 캐시 비활성화
  
  # Security 설정 (테스트)
  security:
    require-ssl: false

# 액추에이터 설정 (테스트)
management:
  endpoints:
    web:
      exposure:
        include: "*"  # 테스트시 모든 엔드포인트 노출
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true

# 로깅 설정 (테스트)
logging:
  level:
    root: DEBUG
    onehajo.seurasaeng: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.sql: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    org.springframework.test: DEBUG
  pattern:
    console: "[%d{HH:mm:ss.SSS}] [%level] [%logger{36}] - %msg%n"
    file: "[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%level] [%logger{36}] - %msg%n"
  file:
    name: logs/seurasaeng-test.log

# 서버 설정 (테스트)
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
  tomcat:
    max-threads: 50
    accept-count: 20
    max-connections: 1000
  compression:
    enabled: false  # 테스트시 압축 비활성화
  error:
    include-stacktrace: always  # 테스트시 스택트레이스 포함

# 커스텀 설정 (테스트)
app:
  # JWT 설정 (테스트)
  jwt:
    secret: test-jwt-secret-key-for-testing-purposes-only
    expiration: 3600000  # 1시간
  
  # QR 암호화 설정 (테스트)
  qr:
    encryption:
      key: test-encryption-key-2024
  
  # CORS 설정 (테스트)
  cors:
    allowed-origins: http://localhost:3000,http://localhost:8080
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  # AWS S3 설정 (테스트 - 모킹)
  aws:
    s3:
      access-key: test-access-key
      secret-key: test-secret-key
      region: ap-northeast-2
      bucket: test-bucket

# 멀티파트 설정 (테스트)
spring.servlet.multipart:
  enabled: true
  max-file-size: 1MB  # 테스트시 작은 크기
  max-request-size: 5MB

# 테스트 전용 설정
test:
  # 테스트 데이터베이스 초기화
  database:
    initialize: true
    reset-on-startup: true
  
  # 테스트 환경 플래그
  environment: ci
  
  # Mock 설정
  mock:
    mail: true
    s3: true
    external-api: true