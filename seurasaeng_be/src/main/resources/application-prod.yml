spring:
  application:
    name: seurasaeng
  
  # 프로덕션 프로파일 설정
  profiles:
    active: prod
  
  # 데이터베이스 설정 (PostgreSQL - prod 스키마)
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL:jdbc:postgresql://postgres:5432/seuraseung?currentSchema=seurasaeng-prod}
    username: ${DB_USERNAME:seuraseung}
    password: ${DB_PASSWORD:seuraseung123!}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA 설정 (프로덕션)
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          lob:
            non_contextual_creation: true
        default_schema: seurasaeng-prod
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  # Redis 설정 (프로덕션 - DB 0)
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:redis123!}
    database: ${REDIS_DB:0}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: 2000ms
  
  # 메일 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
  
  # Thymeleaf 설정 (프로덕션)
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: true
    mode: HTML
    encoding: UTF-8
  
  # 웹 설정
  web:
    resources:
      cache:
        period: 31536000  # 1년 캐시
  
  # Security 설정
  security:
    require-ssl: false  # 내부 통신용

# 액추에이터 설정 (프로덕션)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
    shutdown:
      enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true

# 로깅 설정 (프로덕션)
logging:
  level:
    root: INFO
    onehajo.seurasaeng: INFO
    org.springframework.security: WARN
    org.hibernate.sql: WARN
    org.hibernate.type.descriptor.sql: WARN
  pattern:
    console: "[%d{yyyy-MM-dd HH:mm:ss}] [%level] [%logger{36}] - %msg%n"
    file: "[%d{yyyy-MM-dd HH:mm:ss}] [%level] [%logger{36}] - %msg%n"
  file:
    name: /app/logs/seurasaeng-prod.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30

# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
  tomcat:
    max-threads: 200
    accept-count: 100
    max-connections: 10000
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,application/javascript
  error:
    include-stacktrace: never

# 커스텀 설정
app:
  # JWT 설정
  jwt:
    secret: ${JWT_KEY:seuraseung-jwt-secret-key-2024-prod-version-very-long-secret}
    expiration: 3600000  # 1시간
  
  # QR 암호화 설정
  qr:
    encryption:
      key: ${ENCRYPTION_KEY:seuraseung-encryption-key-2024}
  
  # CORS 설정
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://seurasaeng.site,http://13.125.200.221}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  # AWS S3 설정
  aws:
    s3:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
      region: ${AWS_REGION:ap-northeast-2}
      bucket: ${AWS_BUCKET:seuraseung-bucket}

# 멀티파트 설정
spring.servlet.multipart:
  enabled: true
  max-file-size: 10MB
  max-request-size: 50MB