spring.application.name=seurasaeng

# 프로파일 설정
spring.profiles.active=${SPRING_PROFILES_ACTIVE:prod}

#Logging (환경변수로 덮어쓸 수 있음)
logging.level.org.hibernate.sql=${LOGGING_LEVEL_ORG_HIBERNATE_SQL:warn}
logging.level.org.hibernate.type.descriptor.sql.spi=${LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL_SPI:warn}
logging.level.onehajo.seurasaeng=${LOGGING_LEVEL_APPLICATION:info}

#Set Database (실제 서버 정보로 업데이트)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DB_URL:jdbc:postgresql://postgres:5432/seuraseung}
spring.datasource.username=${DB_USERNAME:seuraseung}
spring.datasource.password=${DB_PASSWORD:SeuraseungProd2024!@#}
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:30000}

#JPA (프로덕션 최적화)
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.database=postgresql
spring.jpa.properties.hibernate.default_schema=${SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA:seurasaeng_test}
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# AWS S3 설정 (AWS Java SDK v1 방식) - 실제 키로 변경 필요
aws.access-key=${AWS_ACCESS_KEY:AKIA...여기에_실제_액세스키}
aws.secret-key=${AWS_SECRET_KEY:여기에_실제_시크릿키}
aws.region=${AWS_REGION:ap-northeast-2}
aws.s3.bucket=${AWS_BUCKET:seurasaeng-profile-qrcode}

# AES 암호화 (프로덕션용 강화된 키)
qr.encryption.key=${ENCRYPTION_KEY:SeuraseungSecure2024ProKey16}

# Redis (강화된 패스워드)
spring.data.redis.host=${REDIS_HOST:redis}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.database=${REDIS_DB:0}
spring.data.redis.password=${REDIS_PASSWORD:SeuraseungRedis2024!@#}
spring.data.redis.timeout=${REDIS_TIMEOUT:2000ms}
spring.data.redis.lettuce.pool.max-active=${REDIS_POOL_MAX_ACTIVE:8}
spring.data.redis.lettuce.pool.max-wait=${REDIS_POOL_MAX_WAIT:-1ms}
spring.data.redis.lettuce.pool.max-idle=${REDIS_POOL_MAX_IDLE:8}
spring.data.redis.lettuce.pool.min-idle=${REDIS_POOL_MIN_IDLE:0}

# CORS (실제 서버 정보 반영)
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://seurasaeng.site,http://13.125.200.221,https://13.125.200.221,http://10.0.2.166:8080}

#JWT (프로덕션용 강화된 키)
jwt.secret=${JWT_KEY:SeuraseungJWTSecretKey2024ProductionEnvironmentSecureKey256BitsMinimumForSecurity!@#}
jwt.expiration=${JWT_EXPIRATION:3600000}

#Mail (실제 Gmail 설정으로 변경 필요)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:seurasaeng.official@gmail.com}
spring.mail.password=${MAIL_PASSWORD:여기에_실제_Gmail_앱패스워드}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.debug=${MAIL_DEBUG:false}

#Thymeleaf (프로덕션 최적화)
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=${SPRING_THYMELEAF_CACHE:true}
spring.thymeleaf.encoding=UTF-8
spring.devtools.restart.enabled=${SPRING_DEVTOOLS_RESTART_ENABLED:false}

# Actuator 설정 (보안 강화)
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info}
management.endpoint.health.show-details=${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:never}
management.server.port=${MANAGEMENT_PORT:8080}
management.metrics.export.prometheus.enabled=false

# 서버 설정 (프로덕션 최적화)
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:}
server.error.whitelabel.enabled=false
server.compression.enabled=true
server.http2.enabled=true

# 웹소켓 설정 (실제 서버 정보 반영)
websocket.allowed-origins=${WEBSOCKET_ALLOWED_ORIGINS:https://seurasaeng.site,http://13.125.200.221,https://13.125.200.221}

# 파일 업로드 설정
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}

# 보안 설정 (프로덕션 강화)
spring.security.require-ssl=${REQUIRE_SSL:false}
server.ssl.enabled=${SSL_ENABLED:false}