spring.application.name=seurasaeng

# 프로파일 설정
spring.profiles.active=${SPRING_PROFILES_ACTIVE:prod}

#Logging (환경변수로 덮어쓸 수 있음)
logging.level.org.hibernate.sql=${LOGGING_LEVEL_ORG_HIBERNATE_SQL:warn}
logging.level.org.hibernate.type.descriptor.sql.spi=${LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL_SPI:warn}
logging.level.onehajo.seurasaeng=${LOGGING_LEVEL_APPLICATION:info}

#Set Database
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/seuraseung}
spring.datasource.username=${DB_USERNAME:seuraseung}
spring.datasource.password=${DB_PASSWORD:seuraseung123!}
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:30000}

#JPA (환경변수로 덮어쓸 수 있음)
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.database=postgresql
spring.jpa.properties.hibernate.default_schema=${SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA:seurasaeng_test}
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# AWS S3 설정 (AWS Java SDK v1 방식)
aws.access-key=${AWS_ACCESS_KEY:}
aws.secret-key=${AWS_SECRET_KEY:}
aws.region=${AWS_REGION:ap-northeast-2}
aws.s3.bucket=${AWS_BUCKET:profile-qrcode}

# AES 암호화
qr.encryption.key=${ENCRYPTION_KEY:MyShuttleQRKey16BytesSecure2024}

# Redis (환경변수에서 직접 참조)
spring.data.redis.host=${REDIS_HOST:redis}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.database=${REDIS_DB:0}
spring.data.redis.password=${REDIS_PASSWORD:redis123!}
spring.data.redis.timeout=${REDIS_TIMEOUT:2000ms}
spring.data.redis.lettuce.pool.max-active=${REDIS_POOL_MAX_ACTIVE:8}
spring.data.redis.lettuce.pool.max-wait=${REDIS_POOL_MAX_WAIT:-1ms}
spring.data.redis.lettuce.pool.max-idle=${REDIS_POOL_MAX_IDLE:8}
spring.data.redis.lettuce.pool.min-idle=${REDIS_POOL_MIN_IDLE:0}

# CORS
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://seurasaeng.site,http://13.125.200.221,https://13.125.200.221}

#JWT
jwt.secret=${JWT_KEY:seuraseung-jwt-secret-key-2024-production-environment-secure-key-minimum-256-bits-for-security}
jwt.expiration=${JWT_EXPIRATION:3600000}

#Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:admin@seurasaeng.site}
spring.mail.password=${MAIL_PASSWORD:placeholder_password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.debug=${MAIL_DEBUG:false}

#Thymeleaf (환경변수로 덮어쓸 수 있음)
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=${SPRING_THYMELEAF_CACHE:true}
spring.thymeleaf.encoding=UTF-8
spring.devtools.restart.enabled=${SPRING_DEVTOOLS_RESTART_ENABLED:false}

# Actuator 설정
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,metrics}
management.endpoint.health.show-details=${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:when-authorized}
management.server.port=${MANAGEMENT_PORT:8080}
management.metrics.export.prometheus.enabled=false

# 서버 설정
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:}
server.error.whitelabel.enabled=false
server.compression.enabled=true

# 웹소켓 설정
websocket.allowed-origins=${WEBSOCKET_ALLOWED_ORIGINS:https://seurasaeng.site,http://13.125.200.221,https://13.125.200.221}

# 파일 업로드 설정
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}